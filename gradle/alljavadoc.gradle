/*
 * Java Genetic Algorithm Library (@__identifier__@).
 * Copyright (c) @__year__@ Franz Wilhelmstötter
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:
 *    Franz Wilhelmstötter (franz.wilhelmstoetter@gmail.com)
 */

rootProject.gradle.projectsEvaluated {
	rootProject.task('alljavadoc', type: Javadoc) {
		description = "Aggregates Javadoc API documentation of all subprojects."
		group = JavaBasePlugin.DOCUMENTATION_GROUP

		source Jenetics.PROJECT_TO_MODULE.collect {
			project(":${it.key}").sourceSets.main.allJava
		}
		classpath = files(
			Jenetics.PROJECT_TO_MODULE.collect {
				project(":${it.key}").sourceSets.main.compileClasspath
			}
		)

		def moduleSourcePaths = Jenetics.PROJECT_TO_MODULE.collect {
			"${it.value}=${rootProject.projectDir}/${it.key}/src/main/java".toString()
		}

		options {
			addMultilineStringsOption("-module-source-path")
				.setValue(moduleSourcePaths)
		}

		destinationDir rootProject.file("$rootProject.buildDir/docs/alljavadoc")
	}

}

